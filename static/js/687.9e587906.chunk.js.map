{"version":3,"file":"static/js/687.9e587906.chunk.js","mappings":"wKACA,GAAgB,QAAU,yBAAyB,aAAe,8BAA8B,SAAW,2BCA3G,GAAgB,QAAU,0B,SCQ1B,MANA,SAAiBA,GACb,OACIC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAAA,QAAUC,SAAEJ,EAAMK,SAE1C,ECNA,GAAgB,OAAS,2BAA2B,OAAS,4B,UCc7D,MAXA,SAAoBL,GAEhB,IAAIM,EAAO,aAAeN,EAAMO,GAEhC,OACIN,EAAAA,EAAAA,KAAA,OAAAG,UACII,EAAAA,EAAAA,MAACC,EAAAA,GAAO,CAACC,GAAIJ,EAAMJ,UAAa,SAAAS,GAAI,OAAIA,EAAKC,SAAWT,EAAAA,OAAWA,EAAAA,MAAQ,EAAEC,SAAA,CAAC,IAAEJ,EAAMW,KAAK,SAGvG,E,iDCPME,GAAcC,EAAAA,EAAAA,GAAiB,IAiBrC,GAAeC,EAAAA,EAAAA,GAAU,CAACC,KAAM,2BAAhC,EAhBuB,SAAChB,GACpB,OACIQ,EAAAA,EAAAA,MAAA,QAAMS,SAAUjB,EAAMkB,aAAad,SAAA,EAC/BH,EAAAA,EAAAA,KAAA,OAAAG,UACIH,EAAAA,EAAAA,KAACkB,EAAAA,EAAK,CAACC,UAAWC,EAAAA,GACXC,SAAU,CAACC,EAAAA,EAAUV,GACrBF,KAAK,iBACLa,YAAY,0BAEvBvB,EAAAA,EAAAA,KAAA,OAAAG,UACIH,EAAAA,EAAAA,KAAA,UAAAG,SAAQ,aAIxB,ICkBA,MA/BA,SAAiBJ,GAEb,IAAIyB,EAAQzB,EAAM0B,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI7B,EAAAA,EAAAA,KAAC8B,EAAU,CAACpB,KAAMmB,EAAEnB,KAAiBJ,GAAIuB,EAAEvB,IAAZuB,EAAEvB,GAAe,IACzFyB,EAAmBP,EAAMQ,SAASJ,KAAI,SAAAK,GAAC,OAAIjC,EAAAA,EAAAA,KAACkC,EAAO,CAAC9B,QAAS6B,EAAE7B,SAAc6B,EAAE3B,GAAK,IAMxF,OAAKP,EAAMoC,QAKP5B,EAAAA,EAAAA,MAAA,OAAKN,UAAWC,EAAAA,QAAUC,SAAA,EAEtBH,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAAA,aAAeC,SAC1BuB,KAGLnB,EAAAA,EAAAA,MAAA,OAAKN,UAAWC,EAAAA,SAAWC,SAAA,EACvBI,EAAAA,EAAAA,MAAA,OAAAJ,SAAA,CAAK,KAAG4B,EAAiB,QACzB/B,EAAAA,EAAAA,KAACoC,EAAc,CAACpB,SAjBR,SAACqB,GACjBtC,EAAMuC,YAAYD,EAAOE,eAC7B,WAGWvC,EAAAA,EAAAA,KAACwC,EAAAA,GAAQ,CAAC/B,GAAI,UAgB7B,E,8BC1BIgC,EAAkB,SAACjB,GACnB,MAAO,CACHC,YAAaD,EAAMC,YAE3B,EACIiB,EAAqB,SAACC,GACtB,MAAO,CACHL,YAAa,SAACC,GACVI,GAASC,EAAAA,EAAAA,GAAmBL,GAChC,EAER,GAEAM,EAAAA,EAAAA,KACIC,EAAAA,EAAAA,IAAQL,EAAiBC,GACzBK,EAAAA,GAFJF,CAGEG,GAIF,OAAeH,EAAAA,EAAAA,KACXC,EAAAA,EAAAA,IAAQL,EAAiBC,GACzBK,EAAAA,GAFJ,CAIEC,E","sources":["webpack://my-app/./src/components/Dialogs/Dialogs.module.css?1b2e","webpack://my-app/./src/components/Dialogs/Message/Message.module.css?72d0","components/Dialogs/Message/Message.jsx","webpack://my-app/./src/components/Dialogs/DialogItem/DialogItem.module.css?beb9","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__9QaCp\",\"dialogsItems\":\"Dialogs_dialogsItems__ceHhf\",\"messages\":\"Dialogs_messages__jxmYD\"};","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"Message_message__BqvPs\"};","import React from \"react\";\r\nimport s from './Message.module.css'\r\n\r\nfunction Message(props) {\r\n    return (\r\n        <div className={s.message}>{props.message}</div>\r\n    );\r\n}\r\n\r\nexport default Message;","// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"DialogItem_dialog__b73eb\",\"active\":\"DialogItem_active__9TgdX\"};","import React from \"react\";\r\nimport s from './DialogItem.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nfunction DialogItem(props) {\r\n\r\n    let path = \"/messages/\" + props.id;\r\n\r\n    return (\r\n        <div>\r\n            <NavLink to={path} className = {name => name.isActive ? s.active : s.dialog }> {props.name}  </NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DialogItem;","import {Field, reduxForm} from \"redux-form\";\r\nimport React from \"react\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\n\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                       validate={[required, maxLength50]}\r\n                       name=\"newMessageBody\"\r\n                       placeholder=\"Enter your message\"/>\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({form: \"dialog-add-message-form\"})(AddMessageForm);","import React from \"react\";\r\nimport s from './Dialogs.module.css'\r\nimport Message from \"./Message/Message\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\n\r\n\r\nfunction Dialogs(props) {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id}/>);\r\n    let messagesElements = state.messages.map(m => <Message message={m.message} key={m.id}/>);\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody)\r\n    }\r\n\r\n    if (!props.isAuth) {\r\n        return <Navigate to={'/login'}/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n\r\n            <div className={s.messages}>\r\n                <div>  {messagesElements} </div>\r\n                <AddMessageForm onSubmit ={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/HOCs\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\ncompose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs)\r\n\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect,\r\n    //withRouter\r\n)(Dialogs)"],"names":["props","_jsx","className","s","children","message","path","id","_jsxs","NavLink","to","name","isActive","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","state","dialogsPage","dialogsElements","dialogs","map","d","DialogItem","messagesElements","messages","m","Message","isAuth","AddMessageForm","values","sendMessage","newMessageBody","Navigate","mapStateToProps","mapDispatchToProps","dispatch","sendMessageCreator","compose","connect","withAuthRedirect","Dialogs"],"sourceRoot":""}